generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user") // "admin" or "user"
  videos        Video[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Video {
  id        String  @id @default(cuid())
  title     String
  url       String?
  published Boolean @default(false)

  months      Month[]      @relation("Months")
  categories  Category[]   @relation("Categories")
  gradeLevels GradeLevel[] @relation("GradeLevels")
  user        User?        @relation(fields: [userId], references: [id])
  userId      String
}

model Month {
  id     String  @id @default(cuid())
  name   String  @unique
  videos Video[] @relation("Months")
}

model Category {
  id     String  @id @default(cuid())
  name   String  @unique
  videos Video[] @relation("Categories")
}

model GradeLevel {
  id     String  @id @default(cuid())
  name   String  @unique
  videos Video[] @relation("GradeLevels")
}
